// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  // using id as a string because it's lucia default data type
  id           String   @id @unique
  username     String   @unique
  email        String   @unique
  phone_number Int
  is_active    Boolean  @default(true)
  profile      String?
  oauth_id     Json?
  skillset     Json?
  roles        Json
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt

  auth_session Session[]
  key          Key[]
  members      Members[]
  project      Projects[]
}

model Session {
  id             String   @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt

  user Users @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model Key {
  id              String   @id @unique
  hashed_password String?
  user_id         String
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt

  user Users @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model Categories {
  id         Int      @id @default(autoincrement())
  name       String   @db.VarChar(255)
  is_public  Boolean  @default(false)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  project Projects[]
}

model Projects {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(255)
  image       Json?
  description String   @db.VarChar(255)
  year        String
  phase       String
  is_public   Boolean  @default(false)
  components  Json
  // links to the document research
  documents   Json?
  links       Json?
  user_id     String
  // partner can be optional, for example radi website does not have a sponsor
  partner_id  Int?
  category_id Int
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  members  Members[]
  user     Users      @relation(references: [id], fields: [user_id])
  category Categories @relation(references: [id], fields: [category_id])
  partner  Partners?  @relation(references: [id], fields: [partner_id])
}

model Members {
  id         Int      @id @default(autoincrement())
  title      String   @db.VarChar(255)
  can_edit   Boolean  @default(false)
  user_id    String
  project_id Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user    Users    @relation(references: [id], fields: [user_id])
  project Projects @relation(references: [id], fields: [project_id], onDelete: Cascade)
}

model Partners {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(255)
  image       String?
  link        String?
  type        String   @db.VarChar(255)
  level       String   @db.VarChar(255)
  amount      Int?
  description String   @db.VarChar(255)
  is_public   Boolean  @default(false)
  is_feature  Boolean  @default(false)
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  project Projects[]
}

model Roles {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(255)
  description String   @db.VarChar(255)
  is_active   Boolean  @default(true)
  // json of permission id
  permission  Json
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}

model Permissions {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(255)
  description String   @db.VarChar(255)
  is_active   Boolean  @default(true)
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}

model Technologies {
  id         Int      @id @default(autoincrement())
  type       String   @db.VarChar(255)
  name       String   @db.VarChar(255)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}